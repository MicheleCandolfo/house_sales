1+2
2-7
13/2
2*pi
3*2
2^2
2**3
2*(2+1)
2*2+1
7%%2
sqrt(4)
sqrt(9)
abs(-3)
sqrt(abs(-4))
x<-2
3->y
z=4
5=t
t=5
2w<-1
r<-2/3*7+x
r<-2/3*7+x
x<-2
3->y
t=5
x<-2
3->y
z=4
r<-2/3*7+x
x->3
x<-3
3->x
2->x
rm(x)
x=2
x*2
2*x
x*y
z
Y*x
d<-x*y
x<--z*5
d
d<-x*y
sqrt(d)
sqrt(d)
d=60
x=20
sqrt(d)
v1<-c(1,2)
v1
v2<-c(1,2,3)
v2
v3<-c(1,2,3,4)
v3
v3
v6<-seq(0,5,1)
v7<-seq(0,8,2)
v7
seq(3,6,1)
seq(0,30,5)
v1+1
v1+v1
v1+v2
2*v1
v1*v1
v1*v2
v1*v3
v1[1]
v1[2]
v1[3]
v2[1]
v2[2]
v2[2]<-66
v2[2]
v2
x<-2
v2[x]
v2[v1]
v3[2:4]
2:4
x
str(x)
s<-"test"
s
str(s)
v4<-c("x","x")
str(v4)
v4<-c("x","y")
str(v4)
v5<-c(1,"x")
str(v5)
help("factor")
help(factor)
str()
patient<-factor(c("good","poor","healthy","poor","poor"))
patien<-factor(c("goo"))
patient<-factor(c("good","poor","healthy","poor","poor"))
patient<-factor(c("good","poor","healthy","poor","poor"), ordered = TRUE)
patient<-factor(c("good","poor","healthy","poor","poor"), ordered = TRUE,
levels = c("poor","good","healthy"))
patient
patient<-factor(c())
patient<-factor(c("good","poor","healthy","poor","poor"), ordered = TRUE,
levels = c("poor","good","healthy"))
patient<-factor(
c("good",
"poor",
"healthy",
"poor",
"poor"),
ordered = TRUE,
levels = c("poor",
"good",
"healthy")
)
str(patient)
summary(patien)
summary(patient)
length(patient)
length(v3)
rm(patien)
table(patient)
view(mtcars)
mydf<-mtcars
view(mtcars)
View(mtcars)
str(mydf)
names(mydf)
names(mydf)[1]
names(mydf)[1]<-"test"
row.names(mydf)
row.names(mydf)[1]
row.names(mydf)[1]<-"test"
test
"test"
mydf$test
mydf$cyl
mydf["cyl"]
str.(mydf)
str(mydf)
View(mydf)
myfunction3 <-function(k,l,m){
return(k+l+m)
}
myfunction(1,2,3)
myfunction(1,2,3)
myfunction <-function(k,l,m){
return(k+l+m)
}
myfunction(1,2,3)
source("C:/Users/pkurz/Desktop/Aalen University/BA - Anwendungsentwicklung/RStudio/firstScript.R")
source("C:/Users/pkurz/Desktop/Aalen University/BA - Anwendungsentwicklung/RStudio/firstScript.R")
print("hello World")
myfunction <-function(k,l,m){      #Name der Funktion
return(k+l+m)     #Operation der Funktion
}
myfunction(1,2,3) #myfunction(k=1,l=2,m=3)
print("hello World")
Hypotenuse<-function(a,b,c){
return(a+b=c)
Hypotenuse<-function(a,b){
return(a+b)
Hypotenuse<-function(a,b){
return(a^2+b^2)
hypotenuse<-function(a,b){
return(a^2+b^2)
}
hypotenuse<-function(a,b){
return(a^2+b^2)
}
hypotenuse(2,3)
hypotenuse<-function(a,b){
return(a^2+b^2)
}
hypotenuse(2,3)
hypotenuse <-function(a,b){
return(a^2+b^2)
}
hypotenuse(2,3)
hypotenuse <-function(a,b){
return((a*a)+(b*b))
}
hypotenuse(2,3)
hypo <-function(k1,k2){
h <- sqrt(k1^2+k2^2)
print(h)
}
hypo(3,4)
hypo(3,4)
hypo <-function(k1,k2){
h <- sqrt(k1^2+k2^2)
print(h)
}
hypo(3,4)
hypo <-function(k1,k2){
h <-sqrt(k1^2+k2^2)
return(h)
}
hypo(3,4)
hypo <-function(k1,k2){
h <-sqrt(k1^2+k2^2)
return(h)
}
hypo(3,4)
hypo(3,4)
myfunction <-function(k,l,m){
return(k+l+m)
}
myfunction(1,2,3)
## a²+b²=c² Hypotenuse berechnet mittels Kathete
hypo <-function(k1,k2){
h <-sqrt(k1^2+k2^2)
return(h)
}
hypo(3,4)
hypo<-function(k1,k2){
h <-sqrt(k1^2+k2^2)
return(h)
hypo<-function(k1,k2){
h <-sqrt(k1^2+k2^2)
return(h)
}
hypo
myfunction <-function(k,l,m){       #Name der Funktion
return(k+l+m)                     #Operation der Funktion
}
myfunction(1,2,3)                   #myfunction(k=1,l=2,m=3)
print("hello World")
source("C:/Users/pkurz/Desktop/Aalen University/BA - Anwendungsentwicklung/RStudio/firstScript.R")
# Funktionen erstellen, um diese zu verstehen
# Auskommentieren mit "#"
myfunction <-function(k,l,m){       #Name der Funktion
return(k+l+m)                     #Operation der Funktion
}
myfunction(1,2,3)                   #myfunction(k=1,l=2,m=3)
print("hello World")
write.csv(mtcars,C:\\Users\pkurz\Desktop\Aalen University\BA - Anwendungsentwicklung\RStudio)
write.csv(mtcars,C:\\Users\pkurz\Desktop\Aalen University\BA - Anwendungsentwicklung\RStudio)
write.csv(mtcars,C:\\Users\pkurz\Desktop\Aalen University\BA - Anwendungsentwicklung\RStudio)
write.csv(mtcars,C:\Users\pkurz\Desktop\Aalen University\BA - Anwendungsentwicklung\RStudio)
write.csv(mtcars,"C:\Users\pkurz\Desktop\Aalen University\BA - Anwendungsentwicklung\RStudio")
write.csv2(mtcars,"C:\Users\pkurz\Desktop\Aalen University\BA - Anwendungsentwicklung\RStudio\mtcars.csv")
write.csv2(mtcars,"C:/Users/pkurz/Desktop/Aalen University/BA - Anwendungsentwicklung/RStudio/mtcars.csv")
test1<-read.csv(path)
hypo<-function(k1,k2)
hypo(3,4)
hypo<-function(k1,k2){
h <-sqrt(k1^2+k2^2)
return(h)
}
hypo(3,4)
test5<-read.csv2(path2, stringsAsFactors = FALSE)
Path1<-"C:/Users/Ralf/Desktop/test.txt"
path2<-"C:/Users/Ralf/Desktop/test2.txt"
write.csv(mydf,path1)
write.csv2(mydf,path2)
write.csv(mtcars,path1)
write.csv2(mtcars,path2)
help(stringsAsFactors)
plot(mtcars$hp.mtcars$mpg)
plot(mtcars$hp,mtcars$mpg)
install.packages("ggplot2")
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
qplot(mtcars$hp,mtcars$mpg)
mydf<-mtcars
mydf$gear<-factor(mtcars$gear.levels=c(3,4,5),
labels=c("3gears","4gears","5gears")
mydf <- mtcars
mydf$gear <- factor(mtcars$gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
mydf$gear <- factor(mtcars$gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
mydf$am <- factor(mtcars $am,levels=c(0,1),
labels=c("Automatic","Manual"))
mydf$cyl <- factor(mtcars $cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
plot(mtcars$mpg,mtcars$hp)
qplot(mtcars$mpg,mtcars$cyl)
library(shiny); runApp('C:/Users/pkurz/Desktop/Aalen University/BA - Anwendungsentwicklung/RStudio/dataprofessor/appHistogram.R')
print(t2-t1)
# load data
t1 <- Sys.time()
# init
library(tidyverse)
library(lubridate)
list.files(path = 'C:\Users\pkurz\Desktop\Aalen University\BA - Anwendungsentwicklung\RStudio\kaggle\COVID-19 Tracking Germany')
# load data
t1 <- Sys.time()
df <- read.csv('C:\Users\pkurz\Desktop\Aalen University\BA - Anwendungsentwicklung\RStudio\kaggle\COVID-19 Tracking Germany/covid_de.csv')
df_demo <- read.csv('C:\Users\pkurz\Desktop\Aalen University\BA - Anwendungsentwicklung\RStudio\kaggle\COVID-19 Tracking Germany/demographics_de.csv')
t2 <- Sys.time()
print(t2-t1)
# init
library(tidyverse)
library(lubridate)
list.files(path = 'C:\Users\pkurz\Desktop\Aalen University\BA - Anwendungsentwicklung\RStudio\kaggle\COVID-19 Tracking Germany')
# load data
t1 <- Sys.time()
df <- read.csv('C:\Users\pkurz\Desktop\Aalen University\BA - Anwendungsentwicklung\RStudio\kaggle\COVID-19 Tracking Germany/covid_de.csv')
df_demo <- read.csv('C:\Users\pkurz\Desktop\Aalen University\BA - Anwendungsentwicklung\RStudio\kaggle\COVID-19 Tracking Germany/demographics_de.csv')
t2 <- Sys.time()
print(t2-t1)
install.packages("rmarkdown")
install.packages("highr")
install.packages("Rtools")
install.packages("rmarkdown")
install.packages("highr")
install.packages("stringi")
install.packages("knitr")
install.packages("yaml")
install.packages("evaluate")
install.packages("tinytex")
install.packages("xfun")
install.packages("stringr")
install.packages("rmarkdown")
install.packages("highr")
load("C:/Users/pkurz/Desktop/Aalen University/BA - Anwendungsentwicklung/HouseSalesKC-Main/house_sales/.RData")
shiny::runApp('C:/Users/pkurz/Desktop/Aalen University/BA - Anwendungsentwicklung/HouseSalesKC-Main/house_sales')
runApp('C:/Users/pkurz/Desktop/Aalen University/BA - Anwendungsentwicklung/HouseSalesKC-Main/house_sales')
shiny::runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp()
runApp()
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp()
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
shiny::runApp('house_sales')
load("~/house_sales/.RData")
runApp('house_sales')
runApp('house_sales')
runApp('house_sales')
